
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/NUMBER VARprog : comandoscomandos : comando comandos comandos : comando : stat stat : VAR "=" expstat : expexp : exp \'+\' exp exp : exp \'-\' exp exp : exp \'*\' exp exp : exp \'/\' exp exp : \'(\' exp \')\' exp : NUMBER exp : VAR '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,8,9,16,17,18,19,20,21,22,],[-3,0,-1,-3,-4,-13,-6,-12,-2,-13,-5,-7,-8,-9,-10,-11,]),'VAR':([0,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,],[5,5,-4,-13,-6,16,-12,16,16,16,16,16,-13,-5,-7,-8,-9,-10,-11,]),'(':([0,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,],[7,7,-4,-13,-6,7,-12,7,7,7,7,7,-13,-5,-7,-8,-9,-10,-11,]),'NUMBER':([0,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,],[8,8,-4,-13,-6,8,-12,8,8,8,8,8,-13,-5,-7,-8,-9,-10,-11,]),'=':([5,],[10,]),'+':([5,6,8,15,16,17,18,19,20,21,22,],[-13,11,-12,11,-13,11,-7,-8,-9,-10,-11,]),'-':([5,6,8,15,16,17,18,19,20,21,22,],[-13,12,-12,12,-13,12,-7,-8,-9,-10,-11,]),'*':([5,6,8,15,16,17,18,19,20,21,22,],[-13,13,-12,13,-13,13,13,13,-9,-10,-11,]),'/':([5,6,8,15,16,17,18,19,20,21,22,],[-13,14,-12,14,-13,14,14,14,-9,-10,-11,]),')':([8,15,16,18,19,20,21,22,],[-12,22,-13,-7,-8,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'comandos':([0,3,],[2,9,]),'comando':([0,3,],[3,3,]),'stat':([0,3,],[4,4,]),'exp':([0,3,7,10,11,12,13,14,],[6,6,15,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> comandos','prog',1,'p_grammar0','output.py',39),
  ('comandos -> comando comandos','comandos',2,'p_grammar1','output.py',44),
  ('comandos -> <empty>','comandos',0,'p_grammar2','output.py',49),
  ('comando -> stat','comando',1,'p_grammar3','output.py',54),
  ('stat -> VAR = exp','stat',3,'p_grammar4','output.py',59),
  ('stat -> exp','stat',1,'p_grammar5','output.py',64),
  ('exp -> exp + exp','exp',3,'p_grammar6','output.py',69),
  ('exp -> exp - exp','exp',3,'p_grammar7','output.py',75),
  ('exp -> exp * exp','exp',3,'p_grammar8','output.py',80),
  ('exp -> exp / exp','exp',3,'p_grammar9','output.py',85),
  ('exp -> ( exp )','exp',3,'p_grammar10','output.py',90),
  ('exp -> NUMBER','exp',1,'p_grammar11','output.py',95),
  ('exp -> VAR','exp',1,'p_grammar12','output.py',100),
]
